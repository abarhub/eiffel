<html>
<body bgcolor="white">
<pre>
<table bgcolor="#FFFFCC" cellpadding="0" cellspacing="0" border="0" width="100%"><a href="../../../../../apidocs/org/apache/bcel/util/AttributeHTML.html">View Javadoc</a></table>
<a name="1" href="#1">1</a>   <b>package</b> <a href="../../../../org/apache/bcel/util/package-summary.html">org.apache.bcel.util</a>;
<a name="2" href="#2">2</a>   
<a name="3" href="#3">3</a>   <font color="#329900"><i>/*<font color="#329900"><i> ====================================================================</font></i></font></i>
<a name="4" href="#4">4</a>   <font color="#329900"><i> * The Apache Software License, Version 1.1</font></i>
<a name="5" href="#5">5</a>   <font color="#329900"><i> *</font></i>
<a name="6" href="#6">6</a>   <font color="#329900"><i> * Copyright (c) 2001 The Apache Software Foundation.  All rights</font></i>
<a name="7" href="#7">7</a>   <font color="#329900"><i> * reserved.</font></i>
<a name="8" href="#8">8</a>   <font color="#329900"><i> *</font></i>
<a name="9" href="#9">9</a>   <font color="#329900"><i> * Redistribution and use in source and binary forms, with or without</font></i>
<a name="10" href="#10">10</a>  <font color="#329900"><i> * modification, are permitted provided that the following conditions</font></i>
<a name="11" href="#11">11</a>  <font color="#329900"><i> * are met:</font></i>
<a name="12" href="#12">12</a>  <font color="#329900"><i> *</font></i>
<a name="13" href="#13">13</a>  <font color="#329900"><i> * 1. Redistributions of source code must retain the above copyright</font></i>
<a name="14" href="#14">14</a>  <font color="#329900"><i> *    notice, this list of conditions and the following disclaimer.</font></i>
<a name="15" href="#15">15</a>  <font color="#329900"><i> *</font></i>
<a name="16" href="#16">16</a>  <font color="#329900"><i> * 2. Redistributions in binary form must reproduce the above copyright</font></i>
<a name="17" href="#17">17</a>  <font color="#329900"><i> *    notice, this list of conditions and the following disclaimer in</font></i>
<a name="18" href="#18">18</a>  <font color="#329900"><i> *    the documentation and/or other materials provided with the</font></i>
<a name="19" href="#19">19</a>  <font color="#329900"><i> *    distribution.</font></i>
<a name="20" href="#20">20</a>  <font color="#329900"><i> *</font></i>
<a name="21" href="#21">21</a>  <font color="#329900"><i> * 3. The end-user documentation included with the redistribution,</font></i>
<a name="22" href="#22">22</a>  <font color="#329900"><i> *    if any, must include the following acknowledgment:</font></i>
<a name="23" href="#23">23</a>  <font color="#329900"><i> *       "This product includes software developed by the</font></i>
<a name="24" href="#24">24</a>  <font color="#329900"><i> *        Apache Software Foundation (<a href="http://www.apache.org/" target="alexandria_uri">http://www.apache.org/</a>)."</font></i>
<a name="25" href="#25">25</a>  <font color="#329900"><i> *    Alternately, this acknowledgment may appear in the software itself,</font></i>
<a name="26" href="#26">26</a>  <font color="#329900"><i> *    if and wherever such third-party acknowledgments normally appear.</font></i>
<a name="27" href="#27">27</a>  <font color="#329900"><i> *</font></i>
<a name="28" href="#28">28</a>  <font color="#329900"><i> * 4. The names "Apache" and "Apache Software Foundation" and</font></i>
<a name="29" href="#29">29</a>  <font color="#329900"><i> *    "Apache BCEL" must not be used to endorse or promote products</font></i>
<a name="30" href="#30">30</a>  <font color="#329900"><i> *    derived from this software without prior written permission. For</font></i>
<a name="31" href="#31">31</a>  <font color="#329900"><i> *    written permission, please contact apache@apache.org.</font></i>
<a name="32" href="#32">32</a>  <font color="#329900"><i> *</font></i>
<a name="33" href="#33">33</a>  <font color="#329900"><i> * 5. Products derived from this software may not be called "Apache",</font></i>
<a name="34" href="#34">34</a>  <font color="#329900"><i> *    "Apache BCEL", nor may "Apache" appear in their name, without</font></i>
<a name="35" href="#35">35</a>  <font color="#329900"><i> *    prior written permission of the Apache Software Foundation.</font></i>
<a name="36" href="#36">36</a>  <font color="#329900"><i> *</font></i>
<a name="37" href="#37">37</a>  <font color="#329900"><i> * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED</font></i>
<a name="38" href="#38">38</a>  <font color="#329900"><i> * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES</font></i>
<a name="39" href="#39">39</a>  <font color="#329900"><i> * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</font></i>
<a name="40" href="#40">40</a>  <font color="#329900"><i> * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR</font></i>
<a name="41" href="#41">41</a>  <font color="#329900"><i> * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,</font></i>
<a name="42" href="#42">42</a>  <font color="#329900"><i> * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT</font></i>
<a name="43" href="#43">43</a>  <font color="#329900"><i> * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF</font></i>
<a name="44" href="#44">44</a>  <font color="#329900"><i> * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND</font></i>
<a name="45" href="#45">45</a>  <font color="#329900"><i> * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</font></i>
<a name="46" href="#46">46</a>  <font color="#329900"><i> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT</font></i>
<a name="47" href="#47">47</a>  <font color="#329900"><i> * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF</font></i>
<a name="48" href="#48">48</a>  <font color="#329900"><i> * SUCH DAMAGE.</font></i>
<a name="49" href="#49">49</a>  <font color="#329900"><i> * ====================================================================</font></i>
<a name="50" href="#50">50</a>  <font color="#329900"><i> *</font></i>
<a name="51" href="#51">51</a>  <font color="#329900"><i> * This software consists of voluntary contributions made by many</font></i>
<a name="52" href="#52">52</a>  <font color="#329900"><i> * individuals on behalf of the Apache Software Foundation.  For more</font></i>
<a name="53" href="#53">53</a>  <font color="#329900"><i> * information on the Apache Software Foundation, please see</font></i>
<a name="54" href="#54">54</a>  <font color="#329900"><i> * &lt;<a href="http://www.apache.org/&gt" target="alexandria_uri">http://www.apache.org/&gt</a>;.</font></i>
<a name="55" href="#55">55</a>  <font color="#329900"><i> */</font></i>
<a name="56" href="#56">56</a>  
<a name="57" href="#57">57</a>  <b>import</b> <a href="../../../../org/apache/bcel/classfile/package-summary.html">org.apache.bcel.classfile</a>.*;
<a name="58" href="#58">58</a>  <b>import</b> java.io.*;
<a name="59" href="#59">59</a>  
<a name="60" href="#60">60</a>  <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="61" href="#61">61</a>  <font color="#AA0000"><i> * Convert found attributes into HTML file.</font></i>
<a name="62" href="#62">62</a>  <font color="#AA0000"><i> *</font></i>
<a name="63" href="#63">63</a>  <font color="#AA0000"><i> * @version $Id: AttributeHTML.java,v 1.2 2002/06/04 11:16:21 mdahm Exp $</font></i>
<a name="64" href="#64">64</a>  <font color="#AA0000"><i> * @author  &lt;A HREF="<a href="mailto:markus.dahm@berlin.de" target="alexandria_uri">mailto:markus.dahm@berlin.de</a>"&gt;M. Dahm&lt;/A&gt;</font></i>
<a name="65" href="#65">65</a>  <font color="#AA0000"><i> * </font></i>
<a name="66" href="#66">66</a>  <font color="#AA0000"><i> */</font></i>
<a name="67" href="#67">67</a>  <b>final</b> <b>class</b> <a href="../../../../org/apache/bcel/util/AttributeHTML.html">AttributeHTML</a> implements org.apache.bcel.Constants {
<a name="68" href="#68">68</a>    <b>private</b> String       <b>class</b>_name;     <font color="#329900"><i>// name of current class</font></i>
<a name="69" href="#69">69</a>    <b>private</b> PrintWriter  file;					<font color="#329900"><i>// file to write to</font></i>
<a name="70" href="#70">70</a>    <b>private</b> <b>int</b>	       attr_count = 0;
<a name="71" href="#71">71</a>    <b>private</b> <a href="../../../../org/apache/bcel/util/ConstantHTML.html">ConstantHTML</a> constant_html;
<a name="72" href="#72">72</a>    <b>private</b> <a href="../../../../org/apache/bcel/classfile/ConstantPool.html">ConstantPool</a> constant_pool;
<a name="73" href="#73">73</a>  
<a name="74" href="#74">74</a>    <a href="../../../../org/apache/bcel/util/AttributeHTML.html">AttributeHTML</a>(String dir, String <b>class</b>_name, <a href="../../../../org/apache/bcel/classfile/ConstantPool.html">ConstantPool</a> constant_pool,
<a name="75" href="#75">75</a>  		ConstantHTML constant_html) throws IOException
<a name="76" href="#76">76</a>    {
<a name="77" href="#77">77</a>      <b>this</b>.<b>class</b>_name    = <b>class</b>_name;
<a name="78" href="#78">78</a>      <b>this</b>.constant_pool = constant_pool;
<a name="79" href="#79">79</a>      <b>this</b>.constant_html = constant_html;
<a name="80" href="#80">80</a>  
<a name="81" href="#81">81</a>      file = <b>new</b> PrintWriter(<b>new</b> FileOutputStream(dir + <b>class</b>_name + <font color="#000099">"_attributes.html"</font>));
<a name="82" href="#82">82</a>      file.println(<font color="#000099">"&lt;HTML&gt;&lt;BODY BGCOLOR=\&quot;#C0C0C0\&quot;&gt;&lt;TABLE BORDER=0&gt;"</font>);
<a name="83" href="#83">83</a>    }                                      
<a name="84" href="#84">84</a>  
<a name="85" href="#85">85</a>    <b>private</b> <b>final</b> String codeLink(<b>int</b> link, <b>int</b> method_number) {
<a name="86" href="#86">86</a>      <b>return</b> <font color="#000099">"&lt;A HREF=\&quot;"</font> + <b>class</b>_name + <font color="#000099">"_code.html#code"</font> +
<a name="87" href="#87">87</a>        method_number + <font color="#000099">"@"</font> + link + <font color="#000099">"\&quot; TARGET=Code&gt;"</font> +
<a name="88" href="#88">88</a>        link + <font color="#000099">"&lt;/A&gt;"</font>;
<a name="89" href="#89">89</a>    }
<a name="90" href="#90">90</a>      
<a name="91" href="#91">91</a>    <b>final</b> <b>void</b> close() {	
<a name="92" href="#92">92</a>      file.println(<font color="#000099">"&lt;/TABLE&gt;&lt;/BODY&gt;&lt;/HTML&gt;"</font>);
<a name="93" href="#93">93</a>      file.close();
<a name="94" href="#94">94</a>    }
<a name="95" href="#95">95</a>  
<a name="96" href="#96">96</a>    <b>final</b> <b>void</b> writeAttribute(<a href="../../../../org/apache/bcel/classfile/Attribute.html">Attribute</a> attribute, String anchor) throws IOException {	
<a name="97" href="#97">97</a>      writeAttribute(attribute, anchor, 0);
<a name="98" href="#98">98</a>    }
<a name="99" href="#99">99</a>  
<a name="100" href="#100">100</a>   <b>final</b> <b>void</b> writeAttribute(<a href="../../../../org/apache/bcel/classfile/Attribute.html">Attribute</a> attribute, String anchor, <b>int</b> method_number) throws IOException {	
<a name="101" href="#101">101</a>     byte         tag = attribute.getTag();
<a name="102" href="#102">102</a>     <b>int</b>        index;
<a name="103" href="#103">103</a>  
<a name="104" href="#104">104</a>     <b>if</b>(tag == ATTR_UNKNOWN) <font color="#329900"><i>// Don't know what to do about this one</font></i>
<a name="105" href="#105">105</a>       <b>return</b>;
<a name="106" href="#106">106</a> 
<a name="107" href="#107">107</a>     attr_count++; <font color="#329900"><i>// Increment number of attributes found so far</font></i>
<a name="108" href="#108">108</a> 
<a name="109" href="#109">109</a>     <b>if</b>(attr_count % 2 == 0)
<a name="110" href="#110">110</a>       file.print(<font color="#000099">"&lt;TR BGCOLOR=\&quot;#C0C0C0\&quot;&gt;&lt;TD&gt;"</font>);
<a name="111" href="#111">111</a>     <b>else</b>
<a name="112" href="#112">112</a>       file.print(<font color="#000099">"&lt;TR BGCOLOR=\&quot;#A0A0A0\&quot;&gt;&lt;TD&gt;"</font>);
<a name="113" href="#113">113</a> 
<a name="114" href="#114">114</a>     file.println(<font color="#000099">"&lt;H4&gt;&lt;A NAME=\&quot;"</font> + anchor + <font color="#000099">"\&quot;&gt;"</font> + attr_count + <font color="#000099">" "</font> + ATTRIBUTE_NAMES[tag] + <font color="#000099">"&lt;/A&gt;&lt;/H4&gt;"</font>);
<a name="115" href="#115">115</a> 
<a name="116" href="#116">116</a>     <font color="#329900"><i>/*<font color="#329900"><i> Handle different attributes</font></i></font></i>
<a name="117" href="#117">117</a> <font color="#329900"><i>     */</font></i>
<a name="118" href="#118">118</a>     <b>switch</b>(tag) {
<a name="119" href="#119">119</a>     <b>case</b> ATTR_CODE:
<a name="120" href="#120">120</a>       <a href="../../../../org/apache/bcel/classfile/Code.html">Code</a>        c          = (Code)attribute;
<a name="121" href="#121">121</a> 
<a name="122" href="#122">122</a>       <font color="#329900"><i>// Some directly printable values</font></i>
<a name="123" href="#123">123</a>       file.print(<font color="#000099">"&lt;UL&gt;&lt;LI&gt;Maximum stack size = "</font> + c.getMaxStack() + 
<a name="124" href="#124">124</a> 		 <font color="#000099">"&lt;/LI&gt;\n&lt;LI&gt;Number of local variables = "</font> + 
<a name="125" href="#125">125</a> 		 c.getMaxLocals() + <font color="#000099">"&lt;/LI&gt;\n&lt;LI&gt;&lt;A HREF=\&quot;"</font> + <b>class</b>_name +
<a name="126" href="#126">126</a> 		 <font color="#000099">"_code.html#method"</font> + method_number + <font color="#000099">"\&quot; TARGET=Code&gt;Byte code&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;\n"</font>);
<a name="127" href="#127">127</a> 
<a name="128" href="#128">128</a>       <font color="#329900"><i>// Get handled exceptions and list them</font></i>
<a name="129" href="#129">129</a>       <a href="../../../../org/apache/bcel/classfile/CodeException.html">CodeException</a>[] ce  = c.getExceptionTable();
<a name="130" href="#130">130</a>       <b>int</b>             len = ce.length;
<a name="131" href="#131">131</a> 
<a name="132" href="#132">132</a>       <b>if</b>(len &gt; 0) {
<a name="133" href="#133">133</a> 	file.print(<font color="#000099">"&lt;P&gt;&lt;B&gt;Exceptions handled&lt;/B&gt;&lt;UL&gt;"</font>);
<a name="134" href="#134">134</a> 
<a name="135" href="#135">135</a> 	<b>for</b>(<b>int</b> i=0; i &lt; len; i++) {
<a name="136" href="#136">136</a> 	  <b>int</b> <b>catch</b>_type = ce[i].getCatchType(); <font color="#329900"><i>// Index in constant pool</font></i>
<a name="137" href="#137">137</a> 	
<a name="138" href="#138">138</a> 	  file.print(<font color="#000099">"&lt;LI&gt;"</font>);
<a name="139" href="#139">139</a> 
<a name="140" href="#140">140</a> 	  <b>if</b>(<b>catch</b>_type != 0)
<a name="141" href="#141">141</a> 	    file.print(constant_html.referenceConstant(<b>catch</b>_type)); <font color="#329900"><i>// Create Link to _cp.html</font></i>
<a name="142" href="#142">142</a> 	  <b>else</b>
<a name="143" href="#143">143</a> 	    file.print(<font color="#000099">"Any Exception"</font>);
<a name="144" href="#144">144</a> 
<a name="145" href="#145">145</a> 	  file.print(<font color="#000099">"&lt;BR&gt;(Ranging from lines "</font> + codeLink(ce[i].getStartPC(), method_number) +
<a name="146" href="#146">146</a> 		     <font color="#000099">" to "</font> + codeLink(ce[i].getEndPC(), method_number) + <font color="#000099">", handled at line "</font> + 
<a name="147" href="#147">147</a> 		     codeLink(ce[i].getHandlerPC(), method_number) + <font color="#000099">")&lt;/LI&gt;"</font>);
<a name="148" href="#148">148</a> 	}
<a name="149" href="#149">149</a> 	file.print(<font color="#000099">"&lt;/UL&gt;"</font>);
<a name="150" href="#150">150</a>       }
<a name="151" href="#151">151</a>       <b>break</b>;
<a name="152" href="#152">152</a> 
<a name="153" href="#153">153</a>     <b>case</b> ATTR_CONSTANT_VALUE:
<a name="154" href="#154">154</a>       index = ((ConstantValue)attribute).getConstantValueIndex();
<a name="155" href="#155">155</a> 
<a name="156" href="#156">156</a>       <font color="#329900"><i>// Reference _cp.html</font></i>
<a name="157" href="#157">157</a>       file.print(<font color="#000099">"&lt;UL&gt;&lt;LI&gt;&lt;A HREF=\&quot;"</font> + <b>class</b>_name + <font color="#000099">"_cp.html#cp"</font> + index + 
<a name="158" href="#158">158</a> 		 <font color="#000099">"\&quot; TARGET=\&quot;ConstantPool\&quot;&gt;Constant value index("</font> + index +<font color="#000099">")&lt;/A&gt;&lt;/UL&gt;\n"</font>);
<a name="159" href="#159">159</a>       <b>break</b>;
<a name="160" href="#160">160</a> 
<a name="161" href="#161">161</a>     <b>case</b> ATTR_SOURCE_FILE:
<a name="162" href="#162">162</a>       index = ((SourceFile)attribute).getSourceFileIndex();
<a name="163" href="#163">163</a> 
<a name="164" href="#164">164</a>       <font color="#329900"><i>// Reference _cp.html</font></i>
<a name="165" href="#165">165</a>       file.print(<font color="#000099">"&lt;UL&gt;&lt;LI&gt;&lt;A HREF=\&quot;"</font> + <b>class</b>_name + <font color="#000099">"_cp.html#cp"</font> + index + 
<a name="166" href="#166">166</a> 		 <font color="#000099">"\&quot; TARGET=\&quot;ConstantPool\&quot;&gt;Source file index("</font> + index +<font color="#000099">")&lt;/A&gt;&lt;/UL&gt;\n"</font>);
<a name="167" href="#167">167</a>       <b>break</b>;
<a name="168" href="#168">168</a> 	  
<a name="169" href="#169">169</a>     <b>case</b> ATTR_EXCEPTIONS:
<a name="170" href="#170">170</a>       <font color="#329900"><i>// List thrown exceptions</font></i>
<a name="171" href="#171">171</a>       <b>int</b>[] indices = ((ExceptionTable)attribute).getExceptionIndexTable();
<a name="172" href="#172">172</a> 
<a name="173" href="#173">173</a>       file.print(<font color="#000099">"&lt;UL&gt;"</font>);
<a name="174" href="#174">174</a> 
<a name="175" href="#175">175</a>       <b>for</b>(<b>int</b> i=0; i &lt; indices.length; i++)
<a name="176" href="#176">176</a> 	file.print(<font color="#000099">"&lt;LI&gt;&lt;A HREF=\&quot;"</font> + <b>class</b>_name + <font color="#000099">"_cp.html#cp"</font> + indices[i] +
<a name="177" href="#177">177</a> 		   <font color="#000099">"\&quot; TARGET=\&quot;ConstantPool\&quot;&gt;Exception class index("</font> + indices[i] + <font color="#000099">")&lt;/A&gt;\n"</font>);
<a name="178" href="#178">178</a> 
<a name="179" href="#179">179</a>       file.print(<font color="#000099">"&lt;/UL&gt;\n"</font>);
<a name="180" href="#180">180</a>       <b>break</b>;
<a name="181" href="#181">181</a> 
<a name="182" href="#182">182</a>     <b>case</b> ATTR_LINE_NUMBER_TABLE:
<a name="183" href="#183">183</a>       <a href="../../../../org/apache/bcel/classfile/LineNumber.html">LineNumber</a>[] line_numbers =((LineNumberTable)attribute).getLineNumberTable();
<a name="184" href="#184">184</a> 
<a name="185" href="#185">185</a>       <font color="#329900"><i>// List line number pairs</font></i>
<a name="186" href="#186">186</a>       file.print(<font color="#000099">"&lt;P&gt;"</font>);
<a name="187" href="#187">187</a> 
<a name="188" href="#188">188</a>       <b>for</b>(<b>int</b> i=0; i &lt; line_numbers.length; i++) {
<a name="189" href="#189">189</a> 	file.print(<font color="#000099">"("</font> + line_numbers[i].getStartPC() + <font color="#000099">",&nbsp;"</font> + line_numbers[i].getLineNumber() + <font color="#000099">")"</font>);
<a name="190" href="#190">190</a> 
<a name="191" href="#191">191</a> 	<b>if</b>(i &lt; line_numbers.length - 1)
<a name="192" href="#192">192</a> 	  file.print(<font color="#000099">", "</font>); <font color="#329900"><i>// breakable</font></i>
<a name="193" href="#193">193</a>       }
<a name="194" href="#194">194</a>       <b>break</b>;
<a name="195" href="#195">195</a> 
<a name="196" href="#196">196</a>     <b>case</b> ATTR_LOCAL_VARIABLE_TABLE:
<a name="197" href="#197">197</a>       <a href="../../../../org/apache/bcel/classfile/LocalVariable.html">LocalVariable</a>[] vars = ((LocalVariableTable)attribute).getLocalVariableTable();
<a name="198" href="#198">198</a> 
<a name="199" href="#199">199</a>       <font color="#329900"><i>// List name, range and type</font></i>
<a name="200" href="#200">200</a>       file.print(<font color="#000099">"&lt;UL&gt;"</font>);
<a name="201" href="#201">201</a> 
<a name="202" href="#202">202</a>       <b>for</b>(<b>int</b> i=0; i &lt; vars.length; i++) {
<a name="203" href="#203">203</a> 	index = vars[i].getSignatureIndex();
<a name="204" href="#204">204</a> 	String signature = ((ConstantUtf8)constant_pool.getConstant(index, CONSTANT_Utf8)).getBytes();
<a name="205" href="#205">205</a> 	signature = Utility.signatureToString(signature, false);
<a name="206" href="#206">206</a> 	<b>int</b>  start = vars[i].getStartPC();
<a name="207" href="#207">207</a> 	<b>int</b>  end   = (start + vars[i].getLength());
<a name="208" href="#208">208</a> 
<a name="209" href="#209">209</a> 	file.println(<font color="#000099">"&lt;LI&gt;"</font> + Class2HTML.referenceType(signature) +
<a name="210" href="#210">210</a> 		     <font color="#000099">"&nbsp;&lt;B&gt;"</font> + vars[i].getName() + <font color="#000099">"&lt;/B&gt; in slot %"</font> + vars[i].getIndex() +
<a name="211" href="#211">211</a> 		     <font color="#000099">"&lt;BR&gt;Valid from lines "</font> +
<a name="212" href="#212">212</a> 		     <font color="#000099">"&lt;A HREF=\&quot;"</font> + <b>class</b>_name + <font color="#000099">"_code.html#code"</font> + method_number + <font color="#000099">"@"</font> + start + <font color="#000099">"\&quot; TARGET=Code&gt;"</font> +
<a name="213" href="#213">213</a> 		     start + <font color="#000099">"&lt;/A&gt; to "</font> +
<a name="214" href="#214">214</a> 		     <font color="#000099">"&lt;A HREF=\&quot;"</font> + <b>class</b>_name + <font color="#000099">"_code.html#code"</font> + method_number + <font color="#000099">"@"</font> + end + <font color="#000099">"\&quot; TARGET=Code&gt;"</font> +
<a name="215" href="#215">215</a> 		     end + <font color="#000099">"&lt;/A&gt;&lt;/LI&gt;"</font>);
<a name="216" href="#216">216</a>       }
<a name="217" href="#217">217</a>       file.print(<font color="#000099">"&lt;/UL&gt;\n"</font>);
<a name="218" href="#218">218</a> 
<a name="219" href="#219">219</a>       <b>break</b>;
<a name="220" href="#220">220</a> 
<a name="221" href="#221">221</a>     <b>case</b> ATTR_INNER_CLASSES:
<a name="222" href="#222">222</a>       <a href="../../../../org/apache/bcel/classfile/InnerClass.html">InnerClass</a>[] classes = ((InnerClasses)attribute).getInnerClasses();
<a name="223" href="#223">223</a> 
<a name="224" href="#224">224</a>       <font color="#329900"><i>// List inner classes</font></i>
<a name="225" href="#225">225</a>       file.print(<font color="#000099">"&lt;UL&gt;"</font>);
<a name="226" href="#226">226</a> 
<a name="227" href="#227">227</a>       <b>for</b>(<b>int</b> i=0; i &lt; classes.length; i++) {
<a name="228" href="#228">228</a> 	String name, access;
<a name="229" href="#229">229</a> 	
<a name="230" href="#230">230</a> 	index = classes[i].getInnerNameIndex();
<a name="231" href="#231">231</a> 	<b>if</b>(index &gt; 0)
<a name="232" href="#232">232</a> 	  name =((ConstantUtf8)constant_pool.getConstant(index, CONSTANT_Utf8)).getBytes();
<a name="233" href="#233">233</a> 	<b>else</b>
<a name="234" href="#234">234</a> 	  name = <font color="#000099">"&lt;anonymous&gt;"</font>;
<a name="235" href="#235">235</a> 
<a name="236" href="#236">236</a> 	access = Utility.accessToString(classes[i].getInnerAccessFlags());
<a name="237" href="#237">237</a> 
<a name="238" href="#238">238</a> 	file.print(<font color="#000099">"&lt;LI&gt;&lt;FONT COLOR=\&quot;#FF0000\&quot;&gt;"</font> + access + <font color="#000099">"&lt;/FONT&gt; "</font>+
<a name="239" href="#239">239</a> 		   constant_html.referenceConstant(classes[i].getInnerClassIndex()) +
<a name="240" href="#240">240</a> 		   <font color="#000099">" in&nbsp;class "</font> + 
<a name="241" href="#241">241</a> 		   constant_html.referenceConstant(classes[i].getOuterClassIndex()) +
<a name="242" href="#242">242</a> 		   <font color="#000099">" named "</font> + name + <font color="#000099">"&lt;/LI&gt;\n"</font>);
<a name="243" href="#243">243</a>       }
<a name="244" href="#244">244</a> 
<a name="245" href="#245">245</a>       file.print(<font color="#000099">"&lt;/UL&gt;\n"</font>);
<a name="246" href="#246">246</a>       <b>break</b>;
<a name="247" href="#247">247</a> 
<a name="248" href="#248">248</a>     <b>default</b>: <font color="#329900"><i>// Such as Unknown attribute or Deprecated</font></i>
<a name="249" href="#249">249</a>       file.print(<font color="#000099">"&lt;P&gt;"</font> + attribute.toString());
<a name="250" href="#250">250</a>     }
<a name="251" href="#251">251</a> 
<a name="252" href="#252">252</a>     file.println(<font color="#000099">"&lt;/TD&gt;&lt;/TR&gt;"</font>);
<a name="253" href="#253">253</a>     file.flush();
<a name="254" href="#254">254</a>   }                  
<a name="255" href="#255">255</a> }
</pre>
<hr><center>This page was automatically generated by <a href="http://jakarta.apache.org/turbine/maven">Maven</a></center></body>
</html>

