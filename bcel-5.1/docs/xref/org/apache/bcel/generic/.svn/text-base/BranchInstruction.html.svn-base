<html>
<body bgcolor="white">
<pre>
<table bgcolor="#FFFFCC" cellpadding="0" cellspacing="0" border="0" width="100%"><a href="../../../../../apidocs/org/apache/bcel/generic/BranchInstruction.html">View Javadoc</a></table>
<a name="1" href="#1">1</a>   <b>package</b> <a href="../../../../org/apache/bcel/<b>generic</b>/package-summary.html">org.apache.bcel.<b>generic</b></a>;
<a name="2" href="#2">2</a>   
<a name="3" href="#3">3</a>   <font color="#329900"><i>/*<font color="#329900"><i> ====================================================================</font></i></font></i>
<a name="4" href="#4">4</a>   <font color="#329900"><i> * The Apache Software License, Version 1.1</font></i>
<a name="5" href="#5">5</a>   <font color="#329900"><i> *</font></i>
<a name="6" href="#6">6</a>   <font color="#329900"><i> * Copyright (c) 2001 The Apache Software Foundation.  All rights</font></i>
<a name="7" href="#7">7</a>   <font color="#329900"><i> * reserved.</font></i>
<a name="8" href="#8">8</a>   <font color="#329900"><i> *</font></i>
<a name="9" href="#9">9</a>   <font color="#329900"><i> * Redistribution and use in source and binary forms, with or without</font></i>
<a name="10" href="#10">10</a>  <font color="#329900"><i> * modification, are permitted provided that the following conditions</font></i>
<a name="11" href="#11">11</a>  <font color="#329900"><i> * are met:</font></i>
<a name="12" href="#12">12</a>  <font color="#329900"><i> *</font></i>
<a name="13" href="#13">13</a>  <font color="#329900"><i> * 1. Redistributions of source code must retain the above copyright</font></i>
<a name="14" href="#14">14</a>  <font color="#329900"><i> *    notice, this list of conditions and the following disclaimer.</font></i>
<a name="15" href="#15">15</a>  <font color="#329900"><i> *</font></i>
<a name="16" href="#16">16</a>  <font color="#329900"><i> * 2. Redistributions in binary form must reproduce the above copyright</font></i>
<a name="17" href="#17">17</a>  <font color="#329900"><i> *    notice, this list of conditions and the following disclaimer in</font></i>
<a name="18" href="#18">18</a>  <font color="#329900"><i> *    the documentation and/or other materials provided with the</font></i>
<a name="19" href="#19">19</a>  <font color="#329900"><i> *    distribution.</font></i>
<a name="20" href="#20">20</a>  <font color="#329900"><i> *</font></i>
<a name="21" href="#21">21</a>  <font color="#329900"><i> * 3. The end-user documentation included with the redistribution,</font></i>
<a name="22" href="#22">22</a>  <font color="#329900"><i> *    if any, must include the following acknowledgment:</font></i>
<a name="23" href="#23">23</a>  <font color="#329900"><i> *       "This product includes software developed by the</font></i>
<a name="24" href="#24">24</a>  <font color="#329900"><i> *        Apache Software Foundation (<a href="http://www.apache.org/" target="alexandria_uri">http://www.apache.org/</a>)."</font></i>
<a name="25" href="#25">25</a>  <font color="#329900"><i> *    Alternately, this acknowledgment may appear in the software itself,</font></i>
<a name="26" href="#26">26</a>  <font color="#329900"><i> *    if and wherever such third-party acknowledgments normally appear.</font></i>
<a name="27" href="#27">27</a>  <font color="#329900"><i> *</font></i>
<a name="28" href="#28">28</a>  <font color="#329900"><i> * 4. The names "Apache" and "Apache Software Foundation" and</font></i>
<a name="29" href="#29">29</a>  <font color="#329900"><i> *    "Apache BCEL" must not be used to endorse or promote products</font></i>
<a name="30" href="#30">30</a>  <font color="#329900"><i> *    derived from this software without prior written permission. For</font></i>
<a name="31" href="#31">31</a>  <font color="#329900"><i> *    written permission, please contact apache@apache.org.</font></i>
<a name="32" href="#32">32</a>  <font color="#329900"><i> *</font></i>
<a name="33" href="#33">33</a>  <font color="#329900"><i> * 5. Products derived from this software may not be called "Apache",</font></i>
<a name="34" href="#34">34</a>  <font color="#329900"><i> *    "Apache BCEL", nor may "Apache" appear in their name, without</font></i>
<a name="35" href="#35">35</a>  <font color="#329900"><i> *    prior written permission of the Apache Software Foundation.</font></i>
<a name="36" href="#36">36</a>  <font color="#329900"><i> *</font></i>
<a name="37" href="#37">37</a>  <font color="#329900"><i> * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESSED OR IMPLIED</font></i>
<a name="38" href="#38">38</a>  <font color="#329900"><i> * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES</font></i>
<a name="39" href="#39">39</a>  <font color="#329900"><i> * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE</font></i>
<a name="40" href="#40">40</a>  <font color="#329900"><i> * DISCLAIMED.  IN NO EVENT SHALL THE APACHE SOFTWARE FOUNDATION OR</font></i>
<a name="41" href="#41">41</a>  <font color="#329900"><i> * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,</font></i>
<a name="42" href="#42">42</a>  <font color="#329900"><i> * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT</font></i>
<a name="43" href="#43">43</a>  <font color="#329900"><i> * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF</font></i>
<a name="44" href="#44">44</a>  <font color="#329900"><i> * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND</font></i>
<a name="45" href="#45">45</a>  <font color="#329900"><i> * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,</font></i>
<a name="46" href="#46">46</a>  <font color="#329900"><i> * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT</font></i>
<a name="47" href="#47">47</a>  <font color="#329900"><i> * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF</font></i>
<a name="48" href="#48">48</a>  <font color="#329900"><i> * SUCH DAMAGE.</font></i>
<a name="49" href="#49">49</a>  <font color="#329900"><i> * ====================================================================</font></i>
<a name="50" href="#50">50</a>  <font color="#329900"><i> *</font></i>
<a name="51" href="#51">51</a>  <font color="#329900"><i> * This software consists of voluntary contributions made by many</font></i>
<a name="52" href="#52">52</a>  <font color="#329900"><i> * individuals on behalf of the Apache Software Foundation.  For more</font></i>
<a name="53" href="#53">53</a>  <font color="#329900"><i> * information on the Apache Software Foundation, please see</font></i>
<a name="54" href="#54">54</a>  <font color="#329900"><i> * &lt;<a href="http://www.apache.org/&gt" target="alexandria_uri">http://www.apache.org/&gt</a>;.</font></i>
<a name="55" href="#55">55</a>  <font color="#329900"><i> */</font></i>
<a name="56" href="#56">56</a>  
<a name="57" href="#57">57</a>  <b>import</b> java.io.*;
<a name="58" href="#58">58</a>  <b>import</b> org.apache.bcel.util.ByteSequence;
<a name="59" href="#59">59</a>  
<a name="60" href="#60">60</a>  <font color="#AA0000"><i>/**<font color="#AA0000"><i>* </font></i></font></i>
<a name="61" href="#61">61</a>  <font color="#AA0000"><i> * Abstract super class for branching instructions like GOTO, IFEQ, etc..</font></i>
<a name="62" href="#62">62</a>  <font color="#AA0000"><i> * Branch instructions may have a variable length, namely GOTO, JSR, </font></i>
<a name="63" href="#63">63</a>  <font color="#AA0000"><i> * LOOKUPSWITCH and TABLESWITCH.</font></i>
<a name="64" href="#64">64</a>  <font color="#AA0000"><i> *</font></i>
<a name="65" href="#65">65</a>  <font color="#AA0000"><i> * @see InstructionList</font></i>
<a name="66" href="#66">66</a>  <font color="#AA0000"><i> * @version $Id: BranchInstruction.java,v 1.1.1.1 2001/10/29 20:00:07 jvanzyl Exp $</font></i>
<a name="67" href="#67">67</a>  <font color="#AA0000"><i> * @author  &lt;A HREF="<a href="mailto:markus.dahm@berlin.de" target="alexandria_uri">mailto:markus.dahm@berlin.de</a>"&gt;M. Dahm&lt;/A&gt;</font></i>
<a name="68" href="#68">68</a>  <font color="#AA0000"><i> */</font></i>
<a name="69" href="#69">69</a>  <b>public</b> <b>abstract</b> <b>class</b> <a href="../../../../org/apache/bcel/generic/BranchInstruction.html">BranchInstruction</a> <b>extends</b> <a href="../../../../org/apache/bcel/generic/Instruction.html">Instruction</a> implements <a href="../../../../org/apache/bcel/generic/InstructionTargeter.html">InstructionTargeter</a> {
<a name="70" href="#70">70</a>    <b>protected</b> <b>int</b>               index;    <font color="#329900"><i>// Branch target relative to this instruction</font></i>
<a name="71" href="#71">71</a>    <b>protected</b> <a href="../../../../org/apache/bcel/generic/InstructionHandle.html">InstructionHandle</a> target;   <font color="#329900"><i>// Target object in instruction list</font></i>
<a name="72" href="#72">72</a>    <b>protected</b> <b>int</b>               position; <font color="#329900"><i>// Byte code offset</font></i>
<a name="73" href="#73">73</a>  
<a name="74" href="#74">74</a>    <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="75" href="#75">75</a>  <font color="#AA0000"><i>   * Empty constructor needed for the Class.newInstance() statement in</font></i>
<a name="76" href="#76">76</a>  <font color="#AA0000"><i>   * Instruction.readInstruction(). Not to be used otherwise.</font></i>
<a name="77" href="#77">77</a>  <font color="#AA0000"><i>   */</font></i>
<a name="78" href="#78">78</a>    <a href="../../../../org/apache/bcel/generic/BranchInstruction.html">BranchInstruction</a>() {}
<a name="79" href="#79">79</a>  
<a name="80" href="#80">80</a>    <font color="#AA0000"><i>/**<font color="#AA0000"><i>* Common super constructor</font></i></font></i>
<a name="81" href="#81">81</a>  <font color="#AA0000"><i>   * @param opcodee Instruction opcode</font></i>
<a name="82" href="#82">82</a>  <font color="#AA0000"><i>   * @param target instruction to branch to</font></i>
<a name="83" href="#83">83</a>  <font color="#AA0000"><i>   */</font></i>
<a name="84" href="#84">84</a>    <b>protected</b> <a href="../../../../org/apache/bcel/generic/BranchInstruction.html">BranchInstruction</a>(<b>short</b> opcode, <a href="../../../../org/apache/bcel/generic/InstructionHandle.html">InstructionHandle</a> target) {
<a name="85" href="#85">85</a>      <b>super</b>(opcode, (<b>short</b>)3);
<a name="86" href="#86">86</a>      setTarget(target);
<a name="87" href="#87">87</a>    }
<a name="88" href="#88">88</a>  
<a name="89" href="#89">89</a>    <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="90" href="#90">90</a>  <font color="#AA0000"><i>   * Dump instruction as byte code to stream out.</font></i>
<a name="91" href="#91">91</a>  <font color="#AA0000"><i>   * @param out Output stream</font></i>
<a name="92" href="#92">92</a>  <font color="#AA0000"><i>   */</font></i>
<a name="93" href="#93">93</a>    <b>public</b> <b>void</b> dump(DataOutputStream out) throws IOException {
<a name="94" href="#94">94</a>      out.writeByte(opcode);
<a name="95" href="#95">95</a>  
<a name="96" href="#96">96</a>      index = getTargetOffset();
<a name="97" href="#97">97</a>  
<a name="98" href="#98">98</a>      <b>if</b>(Math.abs(index) &gt;= 32767) <font color="#329900"><i>// too large for short</font></i>
<a name="99" href="#99">99</a>        <b>throw</b> <b>new</b> <a href="../../../../org/apache/bcel/generic/ClassGenException.html">ClassGenException</a>(<font color="#000099">"Branch target offset too large for short"</font>);
<a name="100" href="#100">100</a> 
<a name="101" href="#101">101</a>     out.writeShort(index); <font color="#329900"><i>// May be negative, i.e., point backwards</font></i>
<a name="102" href="#102">102</a>   }
<a name="103" href="#103">103</a> 
<a name="104" href="#104">104</a>   <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="105" href="#105">105</a> <font color="#AA0000"><i>   * @param target branch target</font></i>
<a name="106" href="#106">106</a> <font color="#AA0000"><i>   * @return the offset to  `target' relative to this instruction</font></i>
<a name="107" href="#107">107</a> <font color="#AA0000"><i>   */</font></i>
<a name="108" href="#108">108</a>   <b>protected</b> <b>int</b> getTargetOffset(<a href="../../../../org/apache/bcel/generic/InstructionHandle.html">InstructionHandle</a> target) {
<a name="109" href="#109">109</a>     <b>if</b>(target == <b>null</b>)
<a name="110" href="#110">110</a>       <b>throw</b> <b>new</b> <a href="../../../../org/apache/bcel/generic/ClassGenException.html">ClassGenException</a>(<font color="#000099">"Target of "</font> + <b>super</b>.toString(<b>true</b>) + 
<a name="111" href="#111">111</a> 				  <font color="#000099">" is invalid null handle"</font>);
<a name="112" href="#112">112</a> 
<a name="113" href="#113">113</a>     <b>int</b> t = target.getPosition();
<a name="114" href="#114">114</a> 
<a name="115" href="#115">115</a>     <b>if</b>(t &lt; 0)
<a name="116" href="#116">116</a>       <b>throw</b> <b>new</b> <a href="../../../../org/apache/bcel/generic/ClassGenException.html">ClassGenException</a>(<font color="#000099">"Invalid branch target position offset for "</font> +
<a name="117" href="#117">117</a> 				  <b>super</b>.toString(<b>true</b>) + <font color="#000099">":"</font> + t + <font color="#000099">":"</font> + target);
<a name="118" href="#118">118</a> 
<a name="119" href="#119">119</a>     <b>return</b> t - position;
<a name="120" href="#120">120</a>   }
<a name="121" href="#121">121</a> 
<a name="122" href="#122">122</a>   <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="123" href="#123">123</a> <font color="#AA0000"><i>   * @return the offset to this instruction's target</font></i>
<a name="124" href="#124">124</a> <font color="#AA0000"><i>   */</font></i>
<a name="125" href="#125">125</a>   <b>protected</b> <b>int</b> getTargetOffset() { <b>return</b> getTargetOffset(target); }
<a name="126" href="#126">126</a> 
<a name="127" href="#127">127</a>   <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="128" href="#128">128</a> <font color="#AA0000"><i>   * Called by InstructionList.setPositions when setting the position for every</font></i>
<a name="129" href="#129">129</a> <font color="#AA0000"><i>   * instruction. In the presence of variable length instructions `setPositions'</font></i>
<a name="130" href="#130">130</a> <font color="#AA0000"><i>   * performs multiple passes over the instruction list to calculate the</font></i>
<a name="131" href="#131">131</a> <font color="#AA0000"><i>   * correct (byte) positions and offsets by calling this function.</font></i>
<a name="132" href="#132">132</a> <font color="#AA0000"><i>   *</font></i>
<a name="133" href="#133">133</a> <font color="#AA0000"><i>   * @param offset additional offset caused by preceding (variable length) instructions</font></i>
<a name="134" href="#134">134</a> <font color="#AA0000"><i>   * @param max_offset the maximum offset that may be caused by these instructions</font></i>
<a name="135" href="#135">135</a> <font color="#AA0000"><i>   * @return additional offset caused by possible change of this instruction's length</font></i>
<a name="136" href="#136">136</a> <font color="#AA0000"><i>   */</font></i>
<a name="137" href="#137">137</a>   <b>protected</b> <b>int</b> updatePosition(<b>int</b> offset, <b>int</b> max_offset) {
<a name="138" href="#138">138</a>     position += offset;
<a name="139" href="#139">139</a>     <b>return</b> 0;
<a name="140" href="#140">140</a>   }
<a name="141" href="#141">141</a> 
<a name="142" href="#142">142</a>   <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="143" href="#143">143</a> <font color="#AA0000"><i>   * Long output format:</font></i>
<a name="144" href="#144">144</a> <font color="#AA0000"><i>   *</font></i>
<a name="145" href="#145">145</a> <font color="#AA0000"><i>   * &lt;position in byte code&gt;</font></i>
<a name="146" href="#146">146</a> <font color="#AA0000"><i>   * &lt;name of opcode&gt; "["&lt;opcode number&gt;"]" </font></i>
<a name="147" href="#147">147</a> <font color="#AA0000"><i>   * "("&lt;length of instruction&gt;")"</font></i>
<a name="148" href="#148">148</a> <font color="#AA0000"><i>   * "&lt;"&lt;target instruction&gt;"&gt;" "@"&lt;branch target offset&gt;</font></i>
<a name="149" href="#149">149</a> <font color="#AA0000"><i>   *</font></i>
<a name="150" href="#150">150</a> <font color="#AA0000"><i>   * @param verbose long/short format switch</font></i>
<a name="151" href="#151">151</a> <font color="#AA0000"><i>   * @return mnemonic for instruction</font></i>
<a name="152" href="#152">152</a> <font color="#AA0000"><i>   */</font></i>
<a name="153" href="#153">153</a>   <b>public</b> String toString(<b>boolean</b> verbose) {
<a name="154" href="#154">154</a>     String s = <b>super</b>.toString(verbose);
<a name="155" href="#155">155</a>     String t = <font color="#000099">"null"</font>;
<a name="156" href="#156">156</a> 
<a name="157" href="#157">157</a>     <b>if</b>(verbose) {
<a name="158" href="#158">158</a>       <b>if</b>(target != <b>null</b>) {
<a name="159" href="#159">159</a> 	<b>if</b>(target.getInstruction() == <b>this</b>)
<a name="160" href="#160">160</a> 	  t = <font color="#000099">"&lt;points to itself&gt;"</font>;
<a name="161" href="#161">161</a> 	<b>else</b> <b>if</b>(target.getInstruction() == <b>null</b>)
<a name="162" href="#162">162</a> 	  t = <font color="#000099">"&lt;null instruction!!!?&gt;"</font>;
<a name="163" href="#163">163</a> 	<b>else</b>
<a name="164" href="#164">164</a> 	  t = target.getInstruction().toString(false); <font color="#329900"><i>// Avoid circles</font></i>
<a name="165" href="#165">165</a>       }
<a name="166" href="#166">166</a>     } <b>else</b> {
<a name="167" href="#167">167</a>       <b>if</b>(target != <b>null</b>) {
<a name="168" href="#168">168</a> 	index = getTargetOffset();
<a name="169" href="#169">169</a> 	t = <font color="#000099">""</font> + (index + position);
<a name="170" href="#170">170</a>       }
<a name="171" href="#171">171</a>     }
<a name="172" href="#172">172</a> 
<a name="173" href="#173">173</a>     <b>return</b> s + <font color="#000099">" -&gt; "</font> + t;
<a name="174" href="#174">174</a>   }
<a name="175" href="#175">175</a> 
<a name="176" href="#176">176</a>   <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="177" href="#177">177</a> <font color="#AA0000"><i>   * Read needed data (e.g. index) from file. Conversion to a InstructionHandle</font></i>
<a name="178" href="#178">178</a> <font color="#AA0000"><i>   * is done in InstructionList(byte[]).</font></i>
<a name="179" href="#179">179</a> <font color="#AA0000"><i>   *</font></i>
<a name="180" href="#180">180</a> <font color="#AA0000"><i>   * @param bytes input stream</font></i>
<a name="181" href="#181">181</a> <font color="#AA0000"><i>   * @param wide wide prefix?</font></i>
<a name="182" href="#182">182</a> <font color="#AA0000"><i>   * @see InstructionList</font></i>
<a name="183" href="#183">183</a> <font color="#AA0000"><i>   */</font></i>
<a name="184" href="#184">184</a>   <b>protected</b> <b>void</b> initFromFile(<a href="../../../../org/apache/bcel/util/ByteSequence.html">ByteSequence</a> bytes, <b>boolean</b> wide) throws IOException
<a name="185" href="#185">185</a>   {
<a name="186" href="#186">186</a>     length = 3;
<a name="187" href="#187">187</a>     index  = bytes.readShort();
<a name="188" href="#188">188</a>   }
<a name="189" href="#189">189</a> 
<a name="190" href="#190">190</a>   <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="191" href="#191">191</a> <font color="#AA0000"><i>   * @return target offset in byte code</font></i>
<a name="192" href="#192">192</a> <font color="#AA0000"><i>   */</font></i>
<a name="193" href="#193">193</a>   <b>public</b> <b>final</b> <b>int</b> getIndex() { <b>return</b> index; }
<a name="194" href="#194">194</a> 
<a name="195" href="#195">195</a>   <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="196" href="#196">196</a> <font color="#AA0000"><i>   * @return target of branch instruction</font></i>
<a name="197" href="#197">197</a> <font color="#AA0000"><i>   */</font></i>
<a name="198" href="#198">198</a>   <b>public</b> <a href="../../../../org/apache/bcel/generic/InstructionHandle.html">InstructionHandle</a> getTarget() { <b>return</b> target; }
<a name="199" href="#199">199</a> 
<a name="200" href="#200">200</a>   <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="201" href="#201">201</a> <font color="#AA0000"><i>   * Set branch target</font></i>
<a name="202" href="#202">202</a> <font color="#AA0000"><i>   * @param target branch target</font></i>
<a name="203" href="#203">203</a> <font color="#AA0000"><i>   */</font></i>
<a name="204" href="#204">204</a>   <b>public</b> <b>void</b> setTarget(<a href="../../../../org/apache/bcel/generic/InstructionHandle.html">InstructionHandle</a> target) {
<a name="205" href="#205">205</a>     notifyTarget(<b>this</b>.target, target, <b>this</b>);
<a name="206" href="#206">206</a>     <b>this</b>.target = target;
<a name="207" href="#207">207</a>   }
<a name="208" href="#208">208</a> 
<a name="209" href="#209">209</a>   <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="210" href="#210">210</a> <font color="#AA0000"><i>   * Used by BranchInstruction, LocalVariableGen, CodeExceptionGen</font></i>
<a name="211" href="#211">211</a> <font color="#AA0000"><i>   */</font></i>
<a name="212" href="#212">212</a>   <b>static</b> <b>final</b> <b>void</b> notifyTarget(<a href="../../../../org/apache/bcel/generic/InstructionHandle.html">InstructionHandle</a> old_ih, <a href="../../../../org/apache/bcel/generic/InstructionHandle.html">InstructionHandle</a> <b>new</b>_ih,
<a name="213" href="#213">213</a> 				 <a href="../../../../org/apache/bcel/generic/InstructionTargeter.html">InstructionTargeter</a> t) {
<a name="214" href="#214">214</a>     <b>if</b>(old_ih != <b>null</b>)
<a name="215" href="#215">215</a>       old_ih.removeTargeter(t);
<a name="216" href="#216">216</a>     <b>if</b>(<b>new</b>_ih != <b>null</b>)
<a name="217" href="#217">217</a>       <b>new</b>_ih.addTargeter(t);
<a name="218" href="#218">218</a>   }
<a name="219" href="#219">219</a> 
<a name="220" href="#220">220</a>   <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="221" href="#221">221</a> <font color="#AA0000"><i>   * @param old_ih old target</font></i>
<a name="222" href="#222">222</a> <font color="#AA0000"><i>   * @param new_ih new target</font></i>
<a name="223" href="#223">223</a> <font color="#AA0000"><i>   */</font></i>
<a name="224" href="#224">224</a>   <b>public</b> <b>void</b> updateTarget(<a href="../../../../org/apache/bcel/generic/InstructionHandle.html">InstructionHandle</a> old_ih, <a href="../../../../org/apache/bcel/generic/InstructionHandle.html">InstructionHandle</a> <b>new</b>_ih) {
<a name="225" href="#225">225</a>     <b>if</b>(target == old_ih)
<a name="226" href="#226">226</a>       setTarget(<b>new</b>_ih);
<a name="227" href="#227">227</a>     <b>else</b>
<a name="228" href="#228">228</a>       <b>throw</b> <b>new</b> <a href="../../../../org/apache/bcel/generic/ClassGenException.html">ClassGenException</a>(<font color="#000099">"Not targeting "</font> + old_ih + <font color="#000099">", but "</font> + target);
<a name="229" href="#229">229</a>   }
<a name="230" href="#230">230</a> 
<a name="231" href="#231">231</a>   <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="232" href="#232">232</a> <font color="#AA0000"><i>   * @return true, if ih is target of this instruction</font></i>
<a name="233" href="#233">233</a> <font color="#AA0000"><i>   */</font></i>
<a name="234" href="#234">234</a>   <b>public</b> <b>boolean</b> containsTarget(<a href="../../../../org/apache/bcel/generic/InstructionHandle.html">InstructionHandle</a> ih) {
<a name="235" href="#235">235</a>     <b>return</b> (target == ih);
<a name="236" href="#236">236</a>   }
<a name="237" href="#237">237</a> 
<a name="238" href="#238">238</a>   <font color="#AA0000"><i>/**<font color="#AA0000"><i>*</font></i></font></i>
<a name="239" href="#239">239</a> <font color="#AA0000"><i>   * Inform target that it's not targeted anymore.</font></i>
<a name="240" href="#240">240</a> <font color="#AA0000"><i>   */</font></i>
<a name="241" href="#241">241</a>   <b>void</b> dispose() {
<a name="242" href="#242">242</a>     setTarget(<b>null</b>);
<a name="243" href="#243">243</a>     index=-1;
<a name="244" href="#244">244</a>     position=-1;
<a name="245" href="#245">245</a>   }
<a name="246" href="#246">246</a> }
</pre>
<hr><center>This page was automatically generated by <a href="http://jakarta.apache.org/turbine/maven">Maven</a></center></body>
</html>

