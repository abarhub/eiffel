<?xml version="1.0" encoding="ISO-8859-1" ?>
<?xml-stylesheet type="text/xsl" href="..\..\..\test_unitaire\programme.xsl"?>
<!DOCTYPE programme SYSTEM "..\..\..\test_unitaire\programme.dtd">
<programme>
	<system/>
	<classe>
		<type nom="TEST1"/>
		<creation>
			<nom_attribut nom="make"/>
		</creation>
		<attribut>
			<nom_attribut nom="make"/>
			<type nom="TEST1"/>
			<routine>
				<signature/>
				<declare_var nom="c">
					<type nom="$character"/>
				</declare_var>
				<declare_var nom="b">
					<type nom="$boolean"/>
				</declare_var>
				<declare_var nom="i">
					<type nom="$integer"/>
				</declare_var>
				<instruction>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="c"/>
						</expression_scalaire>
						<expression>
							<expression_scalaire type="car" text="P"/>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printc"/>
						<expression_scalaire type="var">
							<var nom="c"/>
						</expression_scalaire>
					</instr_extern>
					<!-- Test sup -->
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="prints"/>
						<expression_scalaire type="chaine" text="Test sup"/>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="sup">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="a"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="sup">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="b"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="sup">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="c"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<!-- Test supS -->
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="prints"/>
						<expression_scalaire type="chaine" text="Test supS"/>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="sups">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="a"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="sups">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="b"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="sups">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="c"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<!-- Test egal -->
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="prints"/>
						<expression_scalaire type="chaine" text="Test egal"/>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="egal">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="a"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="egal">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="b"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="egal">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="c"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<!-- Test inf -->
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="prints"/>
						<expression_scalaire type="chaine" text="Test inf"/>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="inf">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="a"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="inf">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="b"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="inf">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="c"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<!-- Test infS -->
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="prints"/>
						<expression_scalaire type="chaine" text="Test infS"/>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="infs">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="a"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="infs">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="b"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="infs">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="c"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<!-- Test diff -->
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="prints"/>
						<expression_scalaire type="chaine" text="Test diff"/>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="diff">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="a"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="diff">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="b"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
						<expression>
							<expression_bin type="diff">
								<expression_scalaire type="car" text="b"/>
								<expression_scalaire type="car" text="c"/>
							</expression_bin>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printb"/>
						<expression_scalaire type="var">
							<var nom="b"/>
						</expression_scalaire>
					</instr_extern>
					<!-- Test conv entier -->
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="prints"/>
						<expression_scalaire type="chaine" text="Test conv entier"/>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="i"/>
						</expression_scalaire>
						<expression>
							<expression_un type="conv_c2e">
								<expression_scalaire type="car" text="b"/>
							</expression_un>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printi"/>
						<expression_scalaire type="var">
							<var nom="i"/>
						</expression_scalaire>
					</instr_extern>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="c"/>
						</expression_scalaire>
						<expression>
							<expression_un type="conv_e2c">
								<expression_scalaire type="entier" text="97"/>
							</expression_un>
						</expression>
					</instr_affect>
					<instr_extern lang_extern="JVM:Test1:static">
						<nom_attribut nom="printc"/>
						<expression_scalaire type="var">
							<var nom="c"/>
						</expression_scalaire>
					</instr_extern>
					<instr_return/>
				</instruction>
			</routine>
		</attribut>
	</classe>
</programme>
