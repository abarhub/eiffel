<?xml version="1.0" encoding="ISO-8859-1"?>
<?xml-stylesheet type="text/xsl" href="..\..\..\test_unitaire\programme.xsl"?>
<!DOCTYPE programme SYSTEM "..\..\..\test_unitaire\programme.dtd">
<programme>
	<system/>
	<classe>
		<type nom="TEST1"/>
		<hierarchie>
			<type nom="any"/>
		</hierarchie>
		<creation>
			<nom_attribut nom="make"/>
		</creation>
		<attribut>
			<nom_attribut nom="Void"/>
			<type nom="any"/>
			<ascendant no="0"/>
		</attribut>
		<attribut>
			<nom_attribut nom="make"/>
			<type nom="TEST1"/>
			<routine>
				<signature/>
				<instruction>
					<instr_label label="debut_routine"/>
					<instr_return/>
					<instr_label label="debut_rescue"/>
					<instr_raise>
						<expression>
							<expression_scalaire type="entier" text="4"/>
						</expression>
					</instr_raise>
				</instruction>
			</routine>
		</attribut>
		<attribut est_static="oui">
			<nom_attribut nom="$once_traite_TEST1$test_once"/>
			<type nom="TEST1"/>
			<type nom="$boolean"/>
		</attribut>
		<attribut>
			<nom_attribut nom="test_once"/>
			<type nom="TEST1"/>
			<routine>
				<signature/>
				<declare_var nom="a">
					<type nom="A"/>
				</declare_var>
				<instruction>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="a"/>
						</expression_scalaire>
						<expression>
							<expression_scalaire type="void"/>
						</expression>
					</instr_affect>
					<instr_label label="debut_routine"/>
					<instr_si_non label="label_once0">
						<expression>
							<expression_scalaire type="var">
								<var nom="$once_traite_TEST1$test_once"/>
							</expression_scalaire>
						</expression>
					</instr_si_non>
					<instr_return/>
					<instr_label label="label_once0"/>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="$once_traite_TEST1$test_once"/>
						</expression_scalaire>
						<expression>
							<expression_scalaire type="booleen" text="true"/>
						</expression>
					</instr_affect>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="a"/>
						</expression_scalaire>
						<expression>
							<expression_scalaire type="var">
								<var nom="Void"/>
							</expression_scalaire>
						</expression>
					</instr_affect>
					<instr_return/>
					<instr_label label="debut_rescue"/>
					<instr_raise>
						<expression>
							<expression_scalaire type="entier" text="4"/>
						</expression>
					</instr_raise>
				</instruction>
			</routine>
		</attribut>
		<attribut est_static="oui">
			<nom_attribut nom="$once_traite_TEST1$test_once2"/>
			<type nom="TEST1"/>
			<type nom="$boolean"/>
		</attribut>
		<attribut est_static="oui">
			<nom_attribut nom="$once_result_TEST1$test_once2"/>
			<type nom="TEST1"/>
			<type nom="B"/>
		</attribut>
		<attribut>
			<nom_attribut nom="test_once2"/>
			<type nom="TEST1"/>
			<type nom="B"/>
			<routine>
				<signature>
					<declare_var nom="Result">
						<type nom="B"/>
					</declare_var>
				</signature>
				<declare_var nom="a">
					<type nom="A"/>
				</declare_var>
				<instruction>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="Result"/>
						</expression_scalaire>
						<expression>
							<expression_scalaire type="void"/>
						</expression>
					</instr_affect>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="a"/>
						</expression_scalaire>
						<expression>
							<expression_scalaire type="void"/>
						</expression>
					</instr_affect>
					<instr_label label="debut_routine"/>
					<instr_si_non label="label_once0">
						<expression>
							<expression_scalaire type="var">
								<var nom="$once_traite_TEST1$test_once2"/>
							</expression_scalaire>
						</expression>
					</instr_si_non>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="result"/>
						</expression_scalaire>
						<expression>
							<expression_scalaire type="var">
								<var nom="$once_result_TEST1$test_once2"/>
							</expression_scalaire>
						</expression>
					</instr_affect>
					<instr_return/>
					<instr_label label="label_once0"/>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="$once_traite_TEST1$test_once2"/>
						</expression_scalaire>
						<expression>
							<expression_scalaire type="booleen" text="true"/>
						</expression>
					</instr_affect>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="a"/>
						</expression_scalaire>
						<expression>
							<expression_scalaire type="var">
								<var nom="Void"/>
							</expression_scalaire>
						</expression>
					</instr_affect>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="Result"/>
						</expression_scalaire>
						<expression>
							<expression_scalaire type="var">
								<var nom="Void"/>
							</expression_scalaire>
						</expression>
					</instr_affect>
					<instr_affect>
						<expression_scalaire type="var">
							<var nom="$once_result_TEST1$test_once2"/>
						</expression_scalaire>
						<expression>
							<expression_scalaire type="var">
								<var nom="result"/>
							</expression_scalaire>
						</expression>
					</instr_affect>
					<instr_return/>
					<instr_label label="debut_rescue"/>
					<instr_raise>
						<expression>
							<expression_scalaire type="entier" text="4"/>
						</expression>
					</instr_raise>
				</instruction>
			</routine>
		</attribut>
	</classe>
	<classe>
		<type nom="ANY"/>
		<hierarchie/>
		<attribut>
			<nom_attribut nom="Void"/>
			<type nom="ANY"/>
			<type nom="NONE"/>
			<descendant>
				<nom_attribut nom="Void"/>
				<type nom="TEST1"/>
			</descendant>
			<descendant>
				<nom_attribut nom="Void"/>
				<type nom="A"/>
			</descendant>
			<descendant>
				<nom_attribut nom="Void"/>
				<type nom="B"/>
			</descendant>
		</attribut>
	</classe>
	<classe>
		<type nom="NONE"/>
		<hierarchie>
			<type nom="TEST1"/>
			<type nom="ANY"/>
			<type nom="A"/>
			<type nom="B"/>
		</hierarchie>
	</classe>
	<classe>
		<type nom="A"/>
		<hierarchie>
			<type nom="any"/>
		</hierarchie>
		<attribut>
			<nom_attribut nom="Void"/>
			<type nom="any"/>
			<ascendant no="0"/>
		</attribut>
	</classe>
	<classe>
		<type nom="B"/>
		<hierarchie>
			<type nom="any"/>
		</hierarchie>
		<attribut>
			<nom_attribut nom="Void"/>
			<type nom="any"/>
			<ascendant no="0"/>
		</attribut>
	</classe>
</programme>
