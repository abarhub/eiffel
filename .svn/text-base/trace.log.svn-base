Initialisation
prologue(1:TEST1.make)
prologue(1:TEST1.Void)
epilogue(1:TEST1.Void)
instr : a:=Void( loc=(14,9,'a','test\genc\general_basic\test1.e'))
instr : !A!a2(obj=4, loc=(15,9,'!','test\genc\general_basic\test1.e'))
instr : b:=Bfalse( loc=(16,9,'b','test\genc\general_basic\test1.e'))
instr : a:=N[n:INTEGER=I0,elt:A=Void]( loc=(17,9,'a','test\genc\general_basic\test1.e'))
instr : b:=Btrue( loc=(18,9,'b','test\genc\general_basic\test1.e'))
prologue(4:A.twin)
epilogue(4:A.twin)
instr : a:=N[n:INTEGER=I0,elt:A=Void]( loc=(19,9,'a','test\genc\general_basic\test1.e'))
instr : b:=Bfalse( loc=(20,9,'b','test\genc\general_basic\test1.e'))
instr : !ANY!a3(obj=12, loc=(21,9,'!','test\genc\general_basic\test1.e'))
prologue(8:A.conforms_to)
epilogue(8:A.conforms_to)
instr : b:=Btrue( loc=(22,9,'b','test\genc\general_basic\test1.e'))
prologue(8:A.conforms_to)
epilogue(8:A.conforms_to)
instr : b:=Btrue( loc=(23,9,'b','test\genc\general_basic\test1.e'))
prologue(8:A.conforms_to)
epilogue(8:A.conforms_to)
instr : b:=Btrue( loc=(24,9,'b','test\genc\general_basic\test1.e'))
prologue(12:ANY.conforms_to)
epilogue(12:ANY.conforms_to)
instr : b:=Bfalse( loc=(25,9,'b','test\genc\general_basic\test1.e'))
prologue(8:A.conforms_to)
epilogue(8:A.conforms_to)
instr : b:=Btrue( loc=(26,9,'b','test\genc\general_basic\test1.e'))
prologue(8:A.generating_type)
epilogue(8:A.generating_type)
instr : s:=SA( loc=(27,9,'s','test\genc\general_basic\test1.e'))
prologue(8:A.generator)
epilogue(8:A.generator)
instr : s:=SA( loc=(28,9,'s','test\genc\general_basic\test1.e'))
epilogue(1:TEST1.make)
Terminaison
